---
name: workflow of testing and building and exachge

on:
  workflow_call
    # inputs:
    #   python-version:
    #     type: string
    #     default: '3.8'

jobs:
  just_test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: checkout code just
        uses: actions/checkout@v4
      - name: setup flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: lint the codes
        run: flake8

  lint_yaml:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: [3.8, 3.9]
        # exclude:
        #   - os: macos-latest
        #     python: 3.7   # Exclude 3.7 version of python

    steps:
      - name: check out lint
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python}}
      - name: install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: test python
        run: pytest

  setup_python:
    needs: [just_test, lint_yaml]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        # exclude:
        #   - os: macos-latest
        #     python: 3.7
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup pythonv3
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: install dependency for ubuntu and macos
        run: |
          python -m pip install --upgrade pip
          if [ -f requirement.txt ]; then pip -r install requirement.txt; fi
        shell: bash
        if: runner.os != 'windows'

      - name: install for windows
        run: |
          if ( Test-path requirement.txt ) { pip install -r requirement.txt }
        shell: pwsh
        if: runner.os == 'windows'
      - name: run python
        run: python firstproj.py
